CREATE PROCEDURE GC_BASE (in_codiceSoggetto INTEGER, in_CodicePratica INTEGER, in_DataPratica DATE, in_SoloCantieriAperti CHAR(1), in_MagEnabled CHAR(1),
                          in_Sottocantiere1 VARCHAR(20), in_Sottocantiere2 VARCHAR(20), in_Sottocantiere3 VARCHAR(20),
                          in_CategCant1 VARCHAR(30), in_CategCant2 VARCHAR(30), in_CategCant3 VARCHAR(30), in_CategCant4 VARCHAR(30), in_CategCant5 VARCHAR(30), in_CategCant6 VARCHAR(30),
                          in_Agente1 VARCHAR(25), in_Agente2 VARCHAR(25), in_Agente3 VARCHAR(25), in_Agente4 VARCHAR(25),
                          in_TipoRigo1 VARCHAR(20), in_TipoRigo2 VARCHAR(20), in_TipoRigo3 VARCHAR(20), in_TipoRigo4 VARCHAR(20), in_TipoRigo5 VARCHAR(20), in_TipoRigo6 VARCHAR(20))
RETURNS
(  TipoDocumento VARCHAR(25)
  ,NumOrdPrev INTEGER
  ,Registro VARCHAR(5)
  ,DATADOCUMENTO TIMESTAMP
  ,PROGRIGO INTEGER
  ,PROGRIGO2 INTEGER
  ,CAUSALE VARCHAR(40)
  ,CODICECLIENTE INTEGER

  ,PRAT_TIPO CHAR(1)
  ,PRATICA INTEGER
  ,DATAPRATICA1 TIMESTAMP
  ,DATACHIUSURAPRATICA1 TIMESTAMP
  ,COSTRUTTOREPRATICA VARCHAR(45)
  ,MODELLOPRATICA VARCHAR(30)
  ,DESCRIZIONEPRATICA VARCHAR(60)
  ,STATODESCRIZIONEPRATICA1 VARCHAR(10)
  ,RIFPRATICA VARCHAR(200)
  ,CODSOGGPRAT INTEGER
  ,RIFSOGGPRAT VARCHAR(100)
  ,PRAT_PRZUNITOPERA1_1 DECIMAL(15,4)
  ,PRAT_PRZUNITOPERA1_2 DECIMAL(15,4)
  ,PRAT_PRZUNITOPERA1_3 DECIMAL(15,4)
  ,PRAT_PRZUNITOPERA1_4 DECIMAL(15,4)
  ,PRAT_PRZUNITOPERA1_5 DECIMAL(15,4)
  ,PRAT_COSTOUNITOPERA1_1 DECIMAL(15,4)
  ,PRAT_COSTOUNITOPERA1_2 DECIMAL(15,4)
  ,PRAT_COSTOUNITOPERA1_3 DECIMAL(15,4)
  ,PRAT_COSTOUNITOPERA1_4 DECIMAL(15,4)
  ,PRAT_COSTOUNITOPERA1_5 DECIMAL(15,4)
  ,PRAT_TIPORICARICO SMALLINT
  ,PRAT_TIPORICDACOMMESSA CHAR(1) 
  ,PRAT_TIPOCOSTO SMALLINT
  ,PRAT_RICARICOPERC DECIMAL(15,4)
  ,PRAT_LISTINO SMALLINT
  ,OPERAINDEX INTEGER
  ,OPERACODICE VARCHAR(15)
  ,OPERADESCRIZIONE VARCHAR(45)
  ,IMMOBLOCALITA VARCHAR(60)
  ,IMMOBINDIRIZZO VARCHAR(80)
  ,IMMOBNUMCIVICO VARCHAR(10)
  ,IMMOBPROVINCIA VARCHAR(3)
  ,IMMOBCAP VARCHAR(5)

  ,GUID VARCHAR(40)
  ,GUID_REF VARCHAR(40)
  ,GUID_ANCESTOR VARCHAR(40)
  ,TRACK_PREVENTIVO VARCHAR(65)
  ,TRACK_COMMESSA VARCHAR(65)
  ,TRACK_DDT VARCHAR(65)
  ,TRACK_FATTURA VARCHAR(65)
  ,TRACK_ESTRATTO_CONTO VARCHAR(65)
  ,TRACK_SAL VARCHAR(65)
  ,TRACK_BOLLA_ENTR VARCHAR(65)
  ,TRACK_FATT_ACQUI VARCHAR(65)
  ,TRACK_ORD_FORN VARCHAR(65)

  ,SEGNOOPERAZIONECANTIERE CHAR(1)
  ,SEGNOOPERAZIONE CHAR(1) 
  ,GC_SEZIONE VARCHAR(20)
  ,STATODESCRIZIONE VARCHAR(10)
  ,STATOFOREGROUND VARCHAR(10)

  ,DOCUMENTO VARCHAR(200)
  ,SOGGETTO VARCHAR(200)

  ,CodiceMagazzino SMALLINT
  ,CodiceArticolo VARCHAR(25)
  ,CodiceArticoloStm VARCHAR(25)
  ,Descrizione VARCHAR(5000)
  ,PrezzoUnitario DECIMAL(15,4)
  ,UnitaDiMisura CHAR(2)
  ,Qta DECIMAL(15,4)
  ,ScontoRigo DECIMAL(15,4)
  ,ScontoRigo2 DECIMAL(15,4)
  ,ScontoRigo3 DECIMAL(15,4)
  ,ImportoRigo DECIMAL(15,4)
  ,PREZZOACQUISTOARTICOLO DECIMAL(15,4)
  ,IMPORTOACQUISTOARTICOLO DECIMAL(15,4)
  ,NOTERIGO VARCHAR(1000)
  ,MARGINE DECIMAL(15,4)
  ,PREZZOUNITARIONETTO DECIMAL(15,4)
  ,CodiceIVA INTEGER
  ,DescrizioneIVA VARCHAR(40)
  ,AliquotaIVA DECIMAL(15,4)

  ,AGENTE  VARCHAR(25)
  ,AGENTE2 VARCHAR(25)
  ,AGENTE3 VARCHAR(25)
  ,AGENTE4 VARCHAR(25)

  ,TIPO1 VARCHAR(20)
  ,TIPO2 VARCHAR(20)
  ,TIPO3 VARCHAR(20)
  ,TIPO4 VARCHAR(20)
  ,TIPO5 VARCHAR(20)
  ,TIPO6 VARCHAR(20)

  ,SOTTOCANTIERE1 VARCHAR(20)
  ,SOTTOCANTIERE2 VARCHAR(20)
  ,SOTTOCANTIERE3 VARCHAR(20)
  ,SOTTOCANTIERE4 VARCHAR(20)
  ,SOTTOCANTIERE5 VARCHAR(20)
  ,SOTTOCANTIERE6 VARCHAR(20)

  ,CATEGCANT1 VARCHAR(30)
  ,CATEGCANT2 VARCHAR(30)
  ,CATEGCANT3 VARCHAR(30)
  ,CATEGCANT4 VARCHAR(30)
  ,CATEGCANT5 VARCHAR(30)
  ,CATEGCANT6 VARCHAR(30)

  ,MAG_ULTIMOPREZZOACQUISTO DECIMAL(15,4)

  ,TIPOLOGIA VARCHAR(60)

  ,GC_COSTONETTOUNITARIO_MOD CHAR(1)
  ,GC_COSTONETTOUNITARIO DECIMAL(15,4)
  ,GC_COSTONETTOIMPORTO DECIMAL(15,4)

  ,GC_RICARICO_MOD CHAR(1)
  ,GC_RICARICO DECIMAL(15,4)
  ,GC_GUADAGNOUNITARIO DECIMAL(15,4)
  ,GC_GUADAGNOIMPORTO DECIMAL(15,4)

  ,GC_QTA_MOD CHAR(1)
  ,GC_QTA DECIMAL(15,4)

  ,GC_DESCRIZIONE_MOD CHAR(1)
  ,GC_DESCRIZIONE VARCHAR(5000)

  ,GC_PRZVEND DECIMAL(15,4)
  ,GC_PRESENTEINCOMMESSA CHAR(1)
  ,GC_PRZVENDDACOMMESSA CHAR(1)
  ,GC_PRZVENDIMPORTO DECIMAL(15,4)

/* ------ SEZIONI ------ */

  ,GC_COMMESSA_QTA DECIMAL(15,4)
  ,GC_COMMESSA_PRZUNITACQ DECIMAL(15,4)
  ,GC_COMMESSA_IMPORTOACQ DECIMAL(15,4)
  ,GC_COMMESSA_PRZUNITVEND DECIMAL(15,4)
  ,GC_COMMESSA_IMPORTOVEND DECIMAL(15,4)
  ,GC_COMMESSA_RICARICO DECIMAL(15,4)
  ,GC_COMMESSA_GUADAGNOUNITARIO DECIMAL(15,4)
  ,GC_COMMESSA_GUADAGNOIMPORTO DECIMAL(15,4)

  ,GC_GIACENZA_QTA DECIMAL(15,4)
  ,GC_GIACENZA_PRZUNITACQ DECIMAL(15,4)
  ,GC_GIACENZA_IMPORTOACQ DECIMAL(15,4)
  ,GC_GIACENZA_PRZUNITVEND DECIMAL(15,4)
  ,GC_GIACENZA_IMPORTOVEND DECIMAL(15,4)
  ,GC_GIACENZA_RICARICO DECIMAL(15,4)
  ,GC_GIACENZA_GUADAGNOUNITARIO DECIMAL(15,4)
  ,GC_GIACENZA_GUADAGNOIMPORTO DECIMAL(15,4)

  ,GC_MONTATO_QTA DECIMAL(15,4)
  ,GC_MONTATO_PRZUNITACQ DECIMAL(15,4)
  ,GC_MONTATO_IMPORTOACQ DECIMAL(15,4)
  ,GC_MONTATO_PRZUNITVEND DECIMAL(15,4)
  ,GC_MONTATO_IMPORTOVEND DECIMAL(15,4)
  ,GC_MONTATO_RICARICO DECIMAL(15,4)
  ,GC_MONTATO_GUADAGNOUNITARIO DECIMAL(15,4)
  ,GC_MONTATO_GUADAGNOIMPORTO DECIMAL(15,4)

  ,GC_DAMONT_GIACENZA_IMPORTOVEND DECIMAL(15,4)
  ,GC_DAMONT_COMMESSA_IMPORTOVEND DECIMAL(15,4)

  ,GC_FATTURATO_IMPORTOVEND DECIMAL(15,4)

  ,GC_DAFATT_GIACENZA_IMPORTOVEND DECIMAL(15,4)
  ,GC_DAFATT_COMMESSA_IMPORTOVEND DECIMAL(15,4)
  ,GC_DAFATT_MONTATO_IMPORTOVEND DECIMAL(15,4)

  ,RDA VARCHAR(20))

AS

  /* Variabili appoggio che contengono dati provenienti dalla vista GC_BASE_RIGHI_NEW ma che non devono essere restituiti nel risultato */
  DECLARE VARIABLE RAGSOCCLI VARCHAR(60);  

  /* Variabili che contengono i parametri provenienti da PROGRESS */
  DECLARE VARIABLE LocParCodiceOpera1 VARCHAR(15);
  DECLARE VARIABLE LocParCodiceOpera2 VARCHAR(15);
  DECLARE VARIABLE LocParCodiceOpera3 VARCHAR(15);
  DECLARE VARIABLE LocParCodiceOpera4 VARCHAR(15);
  DECLARE VARIABLE LocParCodiceOpera5 VARCHAR(15);
  DECLARE VARIABLE LocParDescrizioneOpera1 VARCHAR(45);
  DECLARE VARIABLE LocParDescrizioneOpera2 VARCHAR(45);
  DECLARE VARIABLE LocParDescrizioneOpera3 VARCHAR(45);
  DECLARE VARIABLE LocParDescrizioneOpera4 VARCHAR(45);
  DECLARE VARIABLE LocParDescrizioneOpera5 VARCHAR(45);
/*
  DECLARE VARIABLE LocParPrzUnitOpera1_1 DECIMAL(15,4);
  DECLARE VARIABLE LocParPrzUnitOpera2_1 DECIMAL(15,4);
  DECLARE VARIABLE LocParPrzUnitOpera3_1 DECIMAL(15,4);
  DECLARE VARIABLE LocParPrzUnitOpera4_1 DECIMAL(15,4);
  DECLARE VARIABLE LocParPrzUnitOpera5_1 DECIMAL(15,4);
*/

  /* Variabili appoggio locali */
  DECLARE VARIABLE LocPrzAttualeDaCommessa DECIMAL(15,4);

BEGIN

  /* Carica alcuni parametri dalla tabella PROGRESS */
  SELECT FIRST 1 CODICEOPERA, CODICEOPERA_2, CODICEOPERA_3, CODICEOPERA_4, CODICEOPERA_5,
    DESCRIZIONEOPERA, DESCRIZIONEOPERA_2, DESCRIZIONEOPERA_3, DESCRIZIONEOPERA_4, DESCRIZIONEOPERA_5
  FROM PROGRESS
  INTO :LocParCodiceOpera1, :LocParCodiceOpera2, :LocParCodiceOpera3, :LocParCodiceOpera4, :LocParCodiceOpera5,
       :LocParDescrizioneOpera1, :LocParDescrizioneOpera2, :LocParDescrizioneOpera3, :LocParDescrizioneOpera4, :LocParDescrizioneOpera5;

  /* Definisce la query che preleverà i dati dalla vista GC_BASE_RIGHI_NEW */
  FOR SELECT * FROM GC_BASE_RIGHI_NEW
    WHERE (:in_CodiceSoggetto IS NULL OR CODSOGGPRAT = :in_CodiceSoggetto)
      AND (:in_CodicePratica IS NULL OR PRATICA = :in_CodicePratica)
      AND (:in_DataPratica IS NULL OR DATAPRATICA1 = :in_DataPratica)
      AND (:in_SoloCantieriAperti IS NULL OR DATACHIUSURAPRATICA1 IS NULL)
      AND (:in_Sottocantiere1 IS NULL OR SOTTOCANTIERE1 = :in_Sottocantiere1)
      AND (:in_Sottocantiere2 IS NULL OR SOTTOCANTIERE2 = :in_Sottocantiere2)
      AND (:in_Sottocantiere3 IS NULL OR SOTTOCANTIERE3 = :in_Sottocantiere3)
      AND (:in_CategCant1 IS NULL OR CATEGCANT1 = :in_CategCant1)
      AND (:in_CategCant2 IS NULL OR CATEGCANT2 = :in_CategCant2)
      AND (:in_CategCant3 IS NULL OR CATEGCANT3 = :in_CategCant3)
      AND (:in_CategCant4 IS NULL OR CATEGCANT4 = :in_CategCant4)
      AND (:in_CategCant5 IS NULL OR CATEGCANT5 = :in_CategCant5)
      AND (:in_CategCant6 IS NULL OR CATEGCANT6 = :in_CategCant6)
      AND (:in_Agente1 IS NULL OR AGENTE  = :in_Agente1)
      AND (:in_Agente2 IS NULL OR AGENTE2 = :in_Agente2)
      AND (:in_Agente3 IS NULL OR AGENTE3 = :in_Agente3)
      AND (:in_Agente4 IS NULL OR AGENTE4 = :in_Agente4)
      AND (:in_TipoRigo1 IS NULL OR TIPO1 = :in_TipoRigo1)
      AND (:in_TipoRigo2 IS NULL OR TIPO2 = :in_TipoRigo2)
      AND (:in_TipoRigo3 IS NULL OR TIPO3 = :in_TipoRigo3)
      AND (:in_TipoRigo4 IS NULL OR TIPO4 = :in_TipoRigo4)
      AND (:in_TipoRigo5 IS NULL OR TIPO5 = :in_TipoRigo5)
      AND (:in_TipoRigo6 IS NULL OR TIPO6 = :in_TipoRigo6)
  INTO
     :TipoDocumento
    ,:NumOrdPrev
    ,:Registro
    ,:DATADOCUMENTO
    ,:PROGRIGO
    ,:PROGRIGO2
    ,:CAUSALE
    ,:CODICECLIENTE

    ,:PRAT_TIPO
    ,:PRATICA
    ,:DATAPRATICA1
    ,:DATACHIUSURAPRATICA1
    ,:COSTRUTTOREPRATICA
    ,:MODELLOPRATICA
    ,:DESCRIZIONEPRATICA
    ,:STATODESCRIZIONEPRATICA1
    ,:CODSOGGPRAT
    ,:RIFSOGGPRAT
    ,:PRAT_PRZUNITOPERA1_1
    ,:PRAT_PRZUNITOPERA1_2
    ,:PRAT_PRZUNITOPERA1_3
    ,:PRAT_PRZUNITOPERA1_4
    ,:PRAT_PRZUNITOPERA1_5
    ,:PRAT_COSTOUNITOPERA1_1
    ,:PRAT_COSTOUNITOPERA1_2
    ,:PRAT_COSTOUNITOPERA1_3
    ,:PRAT_COSTOUNITOPERA1_4
    ,:PRAT_COSTOUNITOPERA1_5
    ,:PRAT_TIPORICARICO
    ,:PRAT_TIPORICDACOMMESSA 
    ,:PRAT_TIPOCOSTO
    ,:PRAT_RICARICOPERC
    ,:PRAT_LISTINO
    ,:OPERAINDEX
    ,:IMMOBLOCALITA
    ,:IMMOBINDIRIZZO
    ,:IMMOBNUMCIVICO
    ,:IMMOBPROVINCIA
    ,:IMMOBCAP

    ,:GUID
    ,:GUID_REF
    ,:GUID_ANCESTOR

    ,:SEGNOOPERAZIONECANTIERE
    ,:SEGNOOPERAZIONE
    ,:STATODESCRIZIONE
    ,:STATOFOREGROUND

    ,:RAGSOCCLI
  
    ,:CodiceMagazzino
    ,:CodiceArticolo
    ,:CodiceArticoloStm
    ,:Descrizione
    ,:PrezzoUnitario
    ,:UnitaDiMisura
    ,:Qta
    ,:ScontoRigo
    ,:ScontoRigo2
    ,:ScontoRigo3
    ,:ImportoRigo
    ,:PREZZOACQUISTOARTICOLO
    ,:NOTERIGO
    ,:MARGINE
    ,:CodiceIVA
    ,:DescrizioneIVA
    ,:AliquotaIVA

    ,:AGENTE
    ,:AGENTE2
    ,:AGENTE3
    ,:AGENTE4

    ,:TIPO1
    ,:TIPO2
    ,:TIPO3
    ,:TIPO4
    ,:TIPO5
    ,:TIPO6

    ,:SOTTOCANTIERE1
    ,:SOTTOCANTIERE2
    ,:SOTTOCANTIERE3
    ,:SOTTOCANTIERE4
    ,:SOTTOCANTIERE5
    ,:SOTTOCANTIERE6
  
    ,:CATEGCANT1
    ,:CATEGCANT2
    ,:CATEGCANT3
    ,:CATEGCANT4
    ,:CATEGCANT5
    ,:CATEGCANT6
 
    ,:TIPOLOGIA

    ,:GC_COSTONETTOUNITARIO_MOD
    ,:GC_COSTONETTOUNITARIO

    ,:GC_RICARICO_MOD
    ,:GC_RICARICO

    ,:GC_QTA_MOD
    ,:GC_QTA

    ,:GC_DESCRIZIONE_MOD
    ,:GC_DESCRIZIONE

    ,:RDA

  /* ----- INIZIO CICLO PRINCIPALE ----- */
  DO BEGIN



    /* Costruzione del campo RIFPRATICA */
    IF (PRAT_TIPO = 'A' AND COALESCE(COSTRUTTOREPRATICA,'') <> '' AND COALESCE(MODELLOPRATICA,'') <> '') 
      THEN RIFPRATICA = COSTRUTTOREPRATICA||' '||MODELLOPRATICA;
      ELSE RIFPRATICA = DESCRIZIONEPRATICA;
    RIFPRATICA = RIFPRATICA || '  (' || PRATICA || ', ' || DATAPRATICA1 || ')';

    /* Se sono abilitati i campi del magazzino */
    MAG_ULTIMOPREZZOACQUISTO = NULL;
    IF (in_MagEnabled = 'T') THEN BEGIN
      EXECUTE PROCEDURE GET_ULTIMOPRZACQUISTO_ARTICOLO(CodiceArticolo) RETURNING_VALUES (MAG_ULTIMOPREZZOACQUISTO);
    END



    /* Costruzione dei campi relativi alla manodopera (OperaIndex, OperaCodice, OperaDescrizione) */
    /* Nel caso il rigo provenga dai documenti normali verifica se si tratta di manodopera e nel caso modifica la TIPOLOGIA e imposta i relativi campi */
    IF (TIPOLOGIA = 'Materiali / Apparecchi' AND CODICEARTICOLO IS NOT NULL AND TRIM(CODICEARTICOLO) <> '') THEN BEGIN
      IF (CODICEARTICOLO = LocParCodiceOpera1) THEN BEGIN
        TIPOLOGIA = 'Manodopera';
        OPERAINDEX = 0;
        OPERACODICE = LocParCodiceOpera1;
        OPERADESCRIZIONE = LocParDescrizioneOpera1;
      END ELSE IF (CODICEARTICOLO = LocParCodiceOpera2) THEN BEGIN
        TIPOLOGIA = 'Manodopera';
        OPERAINDEX = 1;
        OPERACODICE = LocParCodiceOpera2;
        OPERADESCRIZIONE = LocParDescrizioneOpera2;
      END ELSE IF (CODICEARTICOLO = LocParCodiceOpera3) THEN BEGIN
        TIPOLOGIA = 'Manodopera';
        OPERAINDEX = 2;
        OPERACODICE = LocParCodiceOpera3;
        OPERADESCRIZIONE = LocParDescrizioneOpera3;
      END ELSE IF (CODICEARTICOLO = LocParCodiceOpera4) THEN BEGIN
        TIPOLOGIA = 'Manodopera';
        OPERAINDEX = 3;
        OPERACODICE = LocParCodiceOpera4;
        OPERADESCRIZIONE = LocParDescrizioneOpera4;
      END ELSE IF (CODICEARTICOLO = LocParCodiceOpera5) THEN BEGIN
        TIPOLOGIA = 'Manodopera';
        OPERAINDEX = 4;
        OPERACODICE = LocParCodiceOpera5;
        OPERADESCRIZIONE = LocParDescrizioneOpera5;
      END ELSE BEGIN
        OPERAINDEX = NULL;
        OPERACODICE = NULL;
        OPERADESCRIZIONE = NULL;
      END
    /* Costruzione dei campi relativi alla manodopera (OperaIndex, OperaCodice, OperaDescrizione) */
    /* Nel caso il rigo provenga dai RAPGIORNRIGHI lascia OPERAINDEX come si trova e carica OPERACODICE e OPERADESCRIZIONE */
    END ELSE IF (TIPOLOGIA = 'Manodopera') THEN BEGIN
      IF (OPERAINDEX = 0) THEN BEGIN
        OPERACODICE = LocParCodiceOpera1;
        OPERADESCRIZIONE = LocParDescrizioneOpera1;
      END ELSE IF (OPERAINDEX = 1) THEN BEGIN
        OPERACODICE = LocParCodiceOpera2;
        OPERADESCRIZIONE = LocParDescrizioneOpera2;
      END ELSE IF (OPERAINDEX = 2) THEN BEGIN
        OPERACODICE = LocParCodiceOpera3;
        OPERADESCRIZIONE = LocParDescrizioneOpera3;
      END ELSE IF (OPERAINDEX = 3) THEN BEGIN
        OPERACODICE = LocParCodiceOpera4;
        OPERADESCRIZIONE = LocParDescrizioneOpera4;
      END ELSE IF (OPERAINDEX = 4) THEN BEGIN
        OPERACODICE = LocParCodiceOpera5;
        OPERADESCRIZIONE = LocParDescrizioneOpera5;
      END ELSE BEGIN
        OPERAINDEX = NULL;
        OPERACODICE = NULL;
        OPERADESCRIZIONE = NULL;
      END
    /* Costruzione dei campi relativi alla manodopera (OperaIndex, OperaCodice, OperaDescrizione) */
    /* Nel caso il rigo provenga dai RAPGIORNRIGHISPESE rende nulli sia OPERAINDEX che OPERACODICE e OPERADESCRIZIONE */
    END ELSE IF (TIPOLOGIA = 'Altre spese') THEN BEGIN
      OPERAINDEX = NULL;
      OPERACODICE = NULL;
      OPERADESCRIZIONE = NULL;
    END   



    /* Tracking */
    EXECUTE PROCEDURE GC_TRACK_DOC('Preventivo', GUID_REF) RETURNING_VALUES (TRACK_PREVENTIVO);
    EXECUTE PROCEDURE GC_TRACK_DOC('Commessa', GUID_REF) RETURNING_VALUES (TRACK_COMMESSA);
    EXECUTE PROCEDURE GC_TRACK_DOC('D.D.T.', GUID_REF) RETURNING_VALUES (TRACK_DDT);
    EXECUTE PROCEDURE GC_TRACK_DOC('Fattura', GUID_REF) RETURNING_VALUES (TRACK_FATTURA);
    EXECUTE PROCEDURE GC_TRACK_DOC('Estratto_conto', GUID_REF) RETURNING_VALUES (TRACK_ESTRATTO_CONTO);
    EXECUTE PROCEDURE GC_TRACK_DOC('S.A.L.', GUID_REF) RETURNING_VALUES (TRACK_SAL);
    EXECUTE PROCEDURE GC_TRACK_DOC('Bolla_entr', GUID_REF) RETURNING_VALUES (TRACK_BOLLA_ENTR);
    EXECUTE PROCEDURE GC_TRACK_DOC('Fatt.acqui', GUID_REF) RETURNING_VALUES (TRACK_FATT_ACQUI);
    EXECUTE PROCEDURE GC_TRACK_DOC('Ord.fornit', GUID_REF) RETURNING_VALUES (TRACK_ORD_FORN);



    /* Sezione */
    IF (SEGNOOPERAZIONECANTIERE='+' OR SEGNOOPERAZIONECANTIERE='-') THEN GC_SEZIONE = 'Giacenza';
    ELSE IF (SEGNOOPERAZIONECANTIERE='F') THEN GC_SEZIONE = 'Fatturato';
    ELSE IF (SEGNOOPERAZIONECANTIERE='C') THEN GC_SEZIONE = 'Commessa';
    ELSE IF (SEGNOOPERAZIONECANTIERE='M') THEN GC_SEZIONE = 'Montato';
    ELSE GC_SEZIONE = '- - -';



    /* Costruzione campi composti da altri campi */
    DOCUMENTO = TipoDocumento || ' ' || NumOrdPrev || Registro || ' del ' || DataDocumento;
    SOGGETTO = CodiceCliente || ' - ' || RagSocCli;



    /* Calcolo di importo acquisto articolo */
    IMPORTOACQUISTOARTICOLO = PREZZOACQUISTOARTICOLO * QTA;



    /* Calcolo di importo acquisto articolo */
    IF (QTA <> 0)
      THEN PREZZOUNITARIONETTO = IMPORTORIGO / QTA;
      ELSE PREZZOUNITARIONETTO = 0;



    /* GC_COSTONETTOUNITARIO */
    /* NB: Se il flag _MOD = 'T' riporta il dato modificato dall'utente altrimenti verifica se siamo in modalità COSTO MEDIO e se si ritorna il costo medio del cantiere, altrimenti infine ritorna il costo dal rigo del documento */
    IF (GC_COSTONETTOUNITARIO_MOD <> 'T') THEN BEGIN
      IF (PRAT_TIPOCOSTO=1 AND TIPOLOGIA='Materiali / Apparecchi' AND SEGNOOPERAZIONECANTIERE<>'F' AND SEGNOOPERAZIONECANTIERE<>'C' AND CODICEARTICOLO IS NOT NULL AND CODICEARTICOLO<>'') THEN EXECUTE PROCEDURE GC_GET_COSTO_MEDIO_ARTICOLO(CODICEARTICOLO, PRATICA, DATAPRATICA1) RETURNING_VALUES (GC_COSTONETTOUNITARIO);
      ELSE GC_COSTONETTOUNITARIO = PREZZOACQUISTOARTICOLO;
    END



    /* GC_RICARICO */
    IF      (GC_RICARICO_MOD='T' AND SEGNOOPERAZIONECANTIERE<>'F' AND SEGNOOPERAZIONECANTIERE<>'C') THEN GC_RICARICO = GC_RICARICO;
    ELSE IF (PRAT_TIPORICARICO=0 AND SEGNOOPERAZIONECANTIERE<>'F' AND SEGNOOPERAZIONECANTIERE<>'C') THEN GC_RICARICO = PRAT_RICARICOPERC;
    ELSE IF (PRAT_TIPORICARICO=1 AND SEGNOOPERAZIONECANTIERE<>'F' AND SEGNOOPERAZIONECANTIERE<>'C') THEN EXECUTE PROCEDURE GC_GET_RICARICO(CODICEARTICOLO, GC_COSTONETTOUNITARIO, PRAT_LISTINO) RETURNING_VALUES (GC_RICARICO);
    ELSE GC_RICARICO = COALESCE(MARGINE,0);



    /* GC_QTA */
    /* NB: Se è uno scarico di cantiere la rende negativa */
    /* NB: Anche se è un rigo di fatturato ma è una nota di credito */
    IF (GC_QTA_MOD <> 'T') THEN GC_QTA = QTA;
    IF (SEGNOOPERAZIONECANTIERE = '-') THEN GC_QTA = 0 - GC_QTA;
    ELSE IF (SEGNOOPERAZIONECANTIERE = 'F' AND TipoDocumento = 'Nota_accre') THEN GC_QTA = 0 - GC_QTA;



    /* GC_DESCRIZIONE */
    IF (GC_DESCRIZIONE_MOD <> 'T') THEN GC_DESCRIZIONE = DESCRIZIONE;



    /* GC_PRZVEND */
    /* ---------------------------------------------------------------------------------------------------------------------- */
    /* NB: Se è una manodopera il prezzo di vendita è fisso e determinato dal cantiere e in questo caso ricalcola il ricarico */
    /* NB: Anche se si deve essere valutato alla vendita come da commessa.                                                    */
    /* ---------------------------------------------------------------------------------------------------------------------- */
 
    /* NB: Orima di procedere carica su una variabile locale il Prezzo come da commessa in modo da averlo a disposizione per eventuali controlli/elaborazioni */
    /* NB: Siccome il prezzo come da commessa è utilizzabile solo per i Materiali/Apparecchi, se non siamo su uno di questi righi oppure i prezzi per commessa sono proprio diasbilitati, imposta la variabile = NULL in modo da non chiamare inutilmente la Procedura) */
    IF (TIPOLOGIA='Materiali / Apparecchi' AND PRAT_TIPORICDACOMMESSA='T')
      THEN EXECUTE PROCEDURE GC_GET_PRZVEND_COMMESSA(CODICEARTICOLO, PRATICA, DATAPRATICA1) RETURNING_VALUES (LocPrzAttualeDaCommessa);
      ELSE LocPrzAttualeDaCommessa = NULL;

    /* Se è un rigo di manodopera ma è una fattura oppure una commessa lascia stare tutto come è */
    IF      (TIPOLOGIA='Manodopera' AND SEGNOOPERAZIONECANTIERE='F' OR SEGNOOPERAZIONECANTIERE='C') THEN BEGIN
      GC_PRZVEND = PREZZOUNITARIONETTO;
      GC_RICARICO = COALESCE(MARGINE,0);

    /* Se un rigo di manodopera di tipo 1 */
    END ELSE IF (TIPOLOGIA='Manodopera' AND OPERAINDEX=0) THEN BEGIN
      GC_PRZVEND = PRAT_PRZUNITOPERA1_1;
      IF (PRAT_COSTOUNITOPERA1_1<>0)
        THEN GC_COSTONETTOUNITARIO = PRAT_COSTOUNITOPERA1_1;
      IF (GC_COSTONETTOUNITARIO<>0)
        THEN GC_RICARICO = (GC_PRZVEND - GC_COSTONETTOUNITARIO) * 100 / GC_COSTONETTOUNITARIO;
        ELSE GC_RICARICO = 0;

    /* Se un rigo di manodopera di tipo 2 */
    END ELSE IF (TIPOLOGIA='Manodopera' AND OPERAINDEX=1) THEN BEGIN
      GC_PRZVEND = PRAT_PRZUNITOPERA1_2;
      IF (PRAT_COSTOUNITOPERA1_2<>0)
        THEN GC_COSTONETTOUNITARIO = PRAT_COSTOUNITOPERA1_2;
      IF (GC_COSTONETTOUNITARIO<>0)
        THEN GC_RICARICO = (GC_PRZVEND - GC_COSTONETTOUNITARIO) * 100 / GC_COSTONETTOUNITARIO;
        ELSE GC_RICARICO = 0;

    /* Se un rigo di manodopera di tipo 3 */
    END ELSE IF (TIPOLOGIA='Manodopera' AND OPERAINDEX=2) THEN BEGIN
      GC_PRZVEND = PRAT_PRZUNITOPERA1_3;
      IF (PRAT_COSTOUNITOPERA1_3<>0)
        THEN GC_COSTONETTOUNITARIO = PRAT_COSTOUNITOPERA1_3;
      IF (GC_COSTONETTOUNITARIO<>0)
        THEN GC_RICARICO = (GC_PRZVEND - GC_COSTONETTOUNITARIO) * 100 / GC_COSTONETTOUNITARIO;
        ELSE GC_RICARICO = 0;

    /* Se un rigo di manodopera di tipo 4 */
    END ELSE IF (TIPOLOGIA='Manodopera' AND OPERAINDEX=3) THEN BEGIN
      GC_PRZVEND = PRAT_PRZUNITOPERA1_4;
      IF (PRAT_COSTOUNITOPERA1_4<>0)
        THEN GC_COSTONETTOUNITARIO = PRAT_COSTOUNITOPERA1_4;
      IF (GC_COSTONETTOUNITARIO<>0)
        THEN GC_RICARICO = (GC_PRZVEND - GC_COSTONETTOUNITARIO) * 100 / GC_COSTONETTOUNITARIO;
        ELSE GC_RICARICO = 0;

    /* Se un rigo di manodopera di tipo 5 */
    END ELSE IF (TIPOLOGIA='Manodopera' AND OPERAINDEX=4) THEN BEGIN
      GC_PRZVEND = PRAT_PRZUNITOPERA1_5;
      IF (PRAT_COSTOUNITOPERA1_5<>0)
        THEN GC_COSTONETTOUNITARIO = PRAT_COSTOUNITOPERA1_5;
      IF (GC_COSTONETTOUNITARIO<>0)
        THEN GC_RICARICO = (GC_PRZVEND - GC_COSTONETTOUNITARIO) * 100 / GC_COSTONETTOUNITARIO;
        ELSE GC_RICARICO = 0;

    /* Se un rigo di materiali/apparecchi e siamo con i prezzi come da commessa, non abbiamo inserito un ricarico specifico, non è una fattura ne una commessa, l'articolo è presente in commessa */
    END ELSE IF (TIPOLOGIA='Materiali / Apparecchi' AND PRAT_TIPORICDACOMMESSA='T' AND GC_RICARICO_MOD<>'T' AND SEGNOOPERAZIONECANTIERE<>'F' AND SEGNOOPERAZIONECANTIERE<>'C' AND LocPrzAttualeDaCommessa IS NOT NULL) THEN BEGIN
      GC_PRZVEND = LocPrzAttualeDaCommessa;
      IF (GC_COSTONETTOUNITARIO<>0)  
        THEN GC_RICARICO = (GC_PRZVEND - GC_COSTONETTOUNITARIO) * 100 / GC_COSTONETTOUNITARIO;
        ELSE GC_RICARICO = 0;

    /* In tutti gli altri casi */
    END ELSE GC_PRZVEND = GC_COSTONETTOUNITARIO * (100 + GC_RICARICO) / 100;
    /* ---------------------------------------------------------------------------------------------------------------------- */



    /* GC_PRESENTEINCOMMESSA */
    IF (TIPOLOGIA='Materiali / Apparecchi' AND SEGNOOPERAZIONECANTIERE<>'F' AND SEGNOOPERAZIONECANTIERE<>'C')
      THEN EXECUTE PROCEDURE GC_GET_PRESENTEINCOMMESSA(CODICEARTICOLO, PRATICA, DATAPRATICA1) RETURNING_VALUES (GC_PRESENTEINCOMMESSA);
      ELSE GC_PRESENTEINCOMMESSA = 'F';



    /* GC_PRZVENDDACOMMESSA */
    IF (TIPOLOGIA='Materiali / Apparecchi' AND PRAT_TIPORICDACOMMESSA='T' AND GC_RICARICO_MOD<>'T' AND SEGNOOPERAZIONECANTIERE<>'F' AND SEGNOOPERAZIONECANTIERE<>'C' AND LocPrzAttualeDaCommessa IS NOT NULL)
    THEN GC_PRZVENDDACOMMESSA = 'T';
    ELSE GC_PRZVENDDACOMMESSA = 'F';



    /* ----------- INIZIO CALCOLO IMPORTI ---------- */
    /* GC_COSTONETTOIMPORTO */
    GC_COSTONETTOIMPORTO = GC_COSTONETTOUNITARIO * GC_QTA;

    /* GC_PRZVENDIMPORTO */
    GC_PRZVENDIMPORTO = GC_PRZVEND * GC_QTA;
    /* ----------- FINE CALCOLO IMPORTI ---------- */

    


    /* ----------- INIZIO CALCOLO GUADAGNI ---------- */
    /* CALCOLO GUADAGNO */
    GC_GUADAGNOUNITARIO = GC_PRZVEND - GC_COSTONETTOUNITARIO;
    GC_GUADAGNOIMPORTO = GC_PRZVENDIMPORTO - GC_COSTONETTOIMPORTO;
    /* ----------- FINE CALCOLO GUADAGNI ---------- */



    /* ----------- INIZIO CALCOLO SEZIONI ---------- */
    /* SEZIONE COMMESSA */
    IF (GC_SEZIONE = 'Commessa') THEN BEGIN
      GC_COMMESSA_QTA = GC_QTA;
      GC_COMMESSA_PRZUNITACQ = GC_COSTONETTOUNITARIO;
      GC_COMMESSA_IMPORTOACQ = GC_COSTONETTOIMPORTO;
      GC_COMMESSA_PRZUNITVEND = GC_PRZVEND;
      GC_COMMESSA_IMPORTOVEND = GC_PRZVENDIMPORTO;
      GC_COMMESSA_RICARICO = GC_RICARICO;
      GC_COMMESSA_GUADAGNOUNITARIO = GC_GUADAGNOUNITARIO;
      GC_COMMESSA_GUADAGNOIMPORTO = GC_GUADAGNOIMPORTO;
    END ELSE BEGIN
      GC_COMMESSA_QTA = 0;
      GC_COMMESSA_PRZUNITACQ = 0;
      GC_COMMESSA_IMPORTOACQ = 0;
      GC_COMMESSA_PRZUNITVEND = 0;
      GC_COMMESSA_IMPORTOVEND = 0;
      GC_COMMESSA_RICARICO = 0;
      GC_COMMESSA_GUADAGNOUNITARIO = 0;
      GC_COMMESSA_GUADAGNOIMPORTO = 0;
    END

    /* SEZIONE GIACENZA */
    IF (GC_SEZIONE = 'Giacenza') THEN BEGIN
      GC_GIACENZA_QTA = GC_QTA;
      GC_GIACENZA_PRZUNITACQ = GC_COSTONETTOUNITARIO;
      GC_GIACENZA_IMPORTOACQ = GC_COSTONETTOIMPORTO;
      GC_GIACENZA_PRZUNITVEND = GC_PRZVEND;
      GC_GIACENZA_IMPORTOVEND = GC_PRZVENDIMPORTO;
      GC_GIACENZA_RICARICO = GC_RICARICO;
      GC_GIACENZA_GUADAGNOUNITARIO = GC_GUADAGNOUNITARIO;
      GC_GIACENZA_GUADAGNOIMPORTO = GC_GUADAGNOIMPORTO;
    END ELSE BEGIN
      GC_GIACENZA_QTA = 0;
      GC_GIACENZA_PRZUNITACQ = 0;
      GC_GIACENZA_IMPORTOACQ = 0;
      GC_GIACENZA_PRZUNITVEND = 0;
      GC_GIACENZA_IMPORTOVEND = 0;
      GC_GIACENZA_RICARICO = 0;
      GC_GIACENZA_GUADAGNOUNITARIO = 0;
      GC_GIACENZA_GUADAGNOIMPORTO = 0;
    END

    /* SEZIONE MONTATO */
    IF (GC_SEZIONE = 'Montato') THEN BEGIN
      GC_MONTATO_QTA = GC_QTA;
      GC_MONTATO_PRZUNITACQ = GC_COSTONETTOUNITARIO;
      GC_MONTATO_IMPORTOACQ = GC_COSTONETTOIMPORTO;
      GC_MONTATO_PRZUNITVEND = GC_PRZVEND;
      GC_MONTATO_IMPORTOVEND = GC_PRZVENDIMPORTO;
      GC_MONTATO_RICARICO = GC_RICARICO;
      GC_MONTATO_GUADAGNOUNITARIO = GC_GUADAGNOUNITARIO;
      GC_MONTATO_GUADAGNOIMPORTO = GC_GUADAGNOIMPORTO;
    END ELSE BEGIN
      GC_MONTATO_QTA = 0;
      GC_MONTATO_PRZUNITACQ = 0;
      GC_MONTATO_IMPORTOACQ = 0;
      GC_MONTATO_PRZUNITVEND = 0;
      GC_MONTATO_IMPORTOVEND = 0;
      GC_MONTATO_RICARICO = 0;
      GC_MONTATO_GUADAGNOUNITARIO = 0;
      GC_MONTATO_GUADAGNOIMPORTO = 0;
    END

    /* SEZIONE FATTURATO */
    IF (GC_SEZIONE = 'Fatturato') THEN BEGIN
      GC_FATTURATO_IMPORTOVEND = GC_PRZVENDIMPORTO;
      /* Se si tratta di una nota di credito deve convertire in negativo altrimenti la nota di credito verrebbe sommata al fatturato invece che sottratto */
      /* IF (TipoDocumento = 'Nota_accre') THEN GC_FATTURATO_IMPORTOVEND = 0 - GC_FATTURATO_IMPORTOVEND; */
    END ELSE BEGIN
      GC_FATTURATO_IMPORTOVEND = 0;
    END
    /* ----------- FINE CALCOLO SEZIONI ---------- */



    /* ----------- INIZIO CALCOLO SEZIONI RESIDUI ---------- */
    /* RESIDUO DA MONTARE RISPETTO ALLA GIACENZA */
    IF (SEGNOOPERAZIONECANTIERE = '+' OR SEGNOOPERAZIONECANTIERE = '-') THEN GC_DAMONT_GIACENZA_IMPORTOVEND = GC_PRZVENDIMPORTO;
      ELSE IF (SEGNOOPERAZIONECANTIERE='M') THEN GC_DAMONT_GIACENZA_IMPORTOVEND = (0-GC_PRZVENDIMPORTO);
      ELSE GC_DAMONT_GIACENZA_IMPORTOVEND = 0;

    /* RESIDUO DA MONTARE RISPETTO ALLA COMMESSA */
    IF (SEGNOOPERAZIONECANTIERE='C') THEN GC_DAMONT_COMMESSA_IMPORTOVEND = GC_PRZVENDIMPORTO;
      ELSE IF (SEGNOOPERAZIONECANTIERE='M') THEN GC_DAMONT_COMMESSA_IMPORTOVEND = (0-GC_PRZVENDIMPORTO);
      ELSE GC_DAMONT_COMMESSA_IMPORTOVEND = 0;



    /* RESIDUO DA FATTURARE RISPETTO ALLA GIACENZA */
    IF (SEGNOOPERAZIONECANTIERE = '+' OR SEGNOOPERAZIONECANTIERE = '-') THEN GC_DAFATT_GIACENZA_IMPORTOVEND = GC_PRZVENDIMPORTO;
      ELSE IF (SEGNOOPERAZIONECANTIERE='F') THEN GC_DAFATT_GIACENZA_IMPORTOVEND = (0-GC_PRZVENDIMPORTO);
      ELSE GC_DAFATT_GIACENZA_IMPORTOVEND = 0;

    /* RESIDUO DA FATTURARE RISPETTO ALLA COMMESSA */
    IF (SEGNOOPERAZIONECANTIERE='C') THEN GC_DAFATT_COMMESSA_IMPORTOVEND = GC_PRZVENDIMPORTO;
      ELSE IF (SEGNOOPERAZIONECANTIERE='F') THEN GC_DAFATT_COMMESSA_IMPORTOVEND = (0-GC_PRZVENDIMPORTO);
      ELSE GC_DAFATT_COMMESSA_IMPORTOVEND = 0;

    /* RESIDUO DA FATTURARE RISPETTO AL MONTATO */
    IF (SEGNOOPERAZIONECANTIERE='M') THEN GC_DAFATT_MONTATO_IMPORTOVEND = GC_PRZVENDIMPORTO;
      ELSE IF (SEGNOOPERAZIONECANTIERE='F') THEN GC_DAFATT_MONTATO_IMPORTOVEND = (0-GC_PRZVENDIMPORTO);
      ELSE GC_DAFATT_MONTATO_IMPORTOVEND = 0;

    /* ----------- FINE CALCOLO SEZIONI RESIDUI ---------- */





    /* Ritorna i valori */
    SUSPEND;
  END
  /* ----- FINE CICLO PRINCIPALE ----- */

END
